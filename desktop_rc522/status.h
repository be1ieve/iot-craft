#ifndef _STATUS_H_
#define _STATUS_H_

#define STATUS_CENTER_X 100
#define STATUS_CENTER_Y 100

// Standby
const uint8_t STATUS_2_WIDTH = 72;
const uint8_t STATUS_2_HEIGHT = 72;
const unsigned char STATUS_2[648] = { /* 0X00,0X01,0X48,0X00,0X48,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,
0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X80,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X1C,0X00,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFE,0X01,0XFF,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFC,0X03,0XFF,0XC0,0X3F,0XFF,
0XFF,0XFF,0XFF,0XF8,0X0F,0XFF,0XF0,0X1F,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0XF8,
0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XF8,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,
0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,
0XE0,0X7F,0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,0XFE,0X07,0XFF,0XFF,
0XFF,0XFF,0XE0,0X7F,0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,0XFE,0X07,
0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,
0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XF0,
0X7F,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,
0XFF,0XF0,0X3F,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0XF8,0X0F,0XFF,
0XFF,0XFF,0XFF,0XF8,0X0F,0XFF,0XF0,0X0F,0XFF,0XFF,0XFF,0XFF,0XFC,0X07,0XFF,0XE0,
0X0F,0XFF,0XFF,0XFF,0XFF,0XFC,0X01,0XFF,0X80,0X0F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,
0X7E,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X01,0XFF,0XFF,
0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X3C,0X00,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XFF,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X07,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X0F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X01,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,
0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,
0XFC,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X00,0X1F,0XFF,0XFF,
0XFF,0XFF,0XFC,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X0F,
0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,
0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFC,
0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,
0XFF,0XF8,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X07,0XFF,
0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,
0X07,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,
0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,
0XFE,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X1F,0XFF,0XFF,
0XFF,0XFF,0XFF,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X00,0X3F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,
0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFC,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X3F,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

// Inactive, Not connected
// Currently not used
const uint8_t STATUS_3_WIDTH = 72;
const uint8_t STATUS_3_HEIGHT = 72;
const unsigned char STATUS_3[648] = { /* 0X00,0X01,0X48,0X00,0X48,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFC,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X3F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,
0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,
0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X01,0XFE,0X00,0XFF,0XFF,0XFF,0XFF,
0XFF,0XF8,0X07,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XE0,0X3F,0XFF,
0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XF0,0X3F,0XFF,0XFF,0XFF,0XFF,0XE0,0X3F,0XFF,0XF0,
0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,0XF8,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,
0XFF,0XF8,0X1F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,
0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,
0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,
0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,
0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XF8,0X0F,0XFF,0XFF,0XFF,0XFF,0XE0,
0X7F,0XFF,0XF8,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X3F,0XFF,0XF8,0X1F,0XFF,0XFF,0XFF,
0XFF,0XE0,0X3F,0XFF,0XF0,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XE0,0X1F,0XFF,
0XFF,0XFF,0XFF,0XF8,0X0F,0XFF,0XC0,0X1F,0XFF,0XFF,0XFF,0XFF,0XF8,0X03,0XFF,0X00,
0X1F,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0XF8,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,
0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XF8,0X00,0X18,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,0XFE,0X00,
0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X0F,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X07,0XFF,0XFF,
0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,
0X1F,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0XFF,0XC0,0X1F,0XFF,0XFF,0XFF,0XFF,
0XF8,0X03,0XFF,0XF0,0X1F,0XFF,0XFF,0XFF,0XFF,0XF8,0X07,0XFF,0XF8,0X0F,0XFF,0XFF,
0XFF,0XFF,0XF8,0X0F,0XFF,0XFC,0X07,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0XFC,0X07,
0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,
0XFE,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,
0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,
0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,
0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,
0X03,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,
0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XF8,0X0F,0XFF,0XFC,0X07,0XFF,0XFF,0XFF,0XFF,
0XFC,0X0F,0XFF,0XF8,0X0F,0XFF,0XFF,0XFF,0XFF,0XFC,0X07,0XFF,0XF8,0X0F,0XFF,0XFF,
0XFF,0XFF,0XFE,0X01,0XFF,0XE0,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X7F,0X80,0X3F,
0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,
0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF0,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

// Not registered
const uint8_t STATUS_4_WIDTH = 72;
const uint8_t STATUS_4_HEIGHT = 72;
const unsigned char STATUS_4[648] = { /* 0X00,0X01,0X48,0X00,0X48,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFC,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X1F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,
0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,
0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X01,0XFE,0X00,0X7F,0XFF,0XFF,0XFF,
0XFF,0XF8,0X07,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XF0,0X0F,0XFF,0XC0,0X3F,0XFF,
0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XE0,0X3F,0XFF,0XFF,0XFF,0XFF,0XE0,0X3F,0XFF,0XF0,
0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,0XF8,0X1F,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,
0XFF,0XF8,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,
0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,
0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,
0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,
0XFC,0X0F,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XF8,0X0F,0XFF,0XFF,0XFF,0XFF,0XE0,
0X7F,0XFF,0XF8,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X3F,0XFF,0XF0,0X1F,0XFF,0XFF,0XFF,
0XFF,0XE0,0X3F,0XFF,0XF0,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XE0,0X1F,0XFF,
0XFF,0XFF,0XFF,0XF0,0X0F,0XFF,0XC0,0X1F,0XFF,0XFF,0XFF,0XFF,0XF8,0X03,0XFF,0X00,
0X1F,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X38,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,
0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X03,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XF0,0X00,0X08,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0XFE,0X00,
0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X07,0XC0,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X07,0XFF,0XFF,
0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X0F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,
0X1E,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF8,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X07,0XFF,0XFF,0XEF,0XFF,0XFF,
0XFF,0XFF,0XF8,0X0F,0XFF,0XFF,0XC7,0XFF,0XFF,0XFF,0XFF,0XF8,0X0F,0XFF,0XFF,0X87,
0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0XFF,0X07,0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,
0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,
0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,
0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,
0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFE,
0X03,0XFF,0XFF,0XFF,0XFF,0XF0,0X1F,0XFF,0XFE,0X03,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,
0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0XFC,0X07,0XFF,0XFF,0XFF,0XFF,
0XFC,0X3F,0XFF,0XF8,0X0F,0XFF,0XFF,0XFF,0XFF,0XFC,0X7F,0XFF,0XF0,0X0F,0XFF,0XFF,
0XFF,0XFF,0XFE,0XFF,0XFF,0XE0,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X1F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,
0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X07,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

// Return
const uint8_t STATUS_5_WIDTH = 72;
const uint8_t STATUS_5_HEIGHT = 72;
const unsigned char STATUS_5[648] = { /* 0X00,0X01,0X48,0X00,0X48,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFC,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X01,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X1F,
0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X1F,
0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0XFF,0X20,0X03,0XFF,0XFF,0XFF,0XFF,0XF0,
0X03,0XFF,0X3C,0X01,0XFF,0XFF,0XFF,0XFF,0XE0,0X01,0XE7,0X3E,0X00,0XFF,0XFF,0XFF,
0XFF,0XE0,0X39,0XE6,0X7F,0X80,0XFF,0XFF,0XFF,0XFF,0XC0,0X78,0XE6,0X73,0XC0,0X7F,
0XFF,0XFF,0XFF,0XC0,0X7C,0XF6,0X67,0XC0,0X7F,0XFF,0XFF,0XFF,0X80,0XFE,0X7E,0XEF,
0XC0,0X3F,0XFF,0XFF,0XFF,0X81,0XFF,0X7F,0XFF,0X80,0X3F,0XFF,0XFF,0XFF,0X01,0XCF,
0XFF,0XFE,0X10,0X1F,0XFF,0XFF,0XFF,0X01,0XC7,0XFF,0XFC,0X70,0X1F,0XFF,0XFF,0XFF,
0X03,0XFF,0XFF,0XF9,0XF8,0X1F,0XFF,0XFF,0XFE,0X00,0X7F,0XFF,0XFF,0XF8,0X0F,0XFF,
0XFF,0XFE,0X00,0X1F,0XFF,0XFF,0XF8,0X0F,0XFF,0XFF,0XFE,0X06,0X07,0XFF,0XFF,0X1C,
0X0F,0XFF,0XFF,0XFE,0X07,0XFF,0XFF,0XFE,0X1C,0X0F,0XFF,0XFF,0XFE,0X07,0XFF,0XFF,
0XFF,0XFC,0X0F,0XFF,0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XFE,0X07,
0X0F,0XFF,0XFC,0X7C,0X0F,0XFF,0XFF,0XFE,0X03,0XFF,0XFF,0XFE,0X00,0X0F,0XFF,0XFF,
0XFE,0X03,0XFF,0XFF,0XFF,0XC0,0X0F,0XFF,0XFF,0XFF,0X03,0XF3,0XFF,0XFF,0XF8,0X1F,
0XFF,0XFF,0XFF,0X01,0XC7,0XFF,0XFC,0XF0,0X1F,0XFF,0XFF,0XFF,0X01,0X0F,0XFF,0XFE,
0X70,0X1F,0XFF,0XFF,0XFF,0X80,0X1F,0XFF,0XDF,0X70,0X3F,0XFF,0XFF,0XFF,0X80,0X7E,
0XEF,0XCF,0XE0,0X3F,0XFF,0XFF,0XFF,0XC0,0X7C,0XED,0XE7,0XC0,0X7F,0XFF,0XFF,0XFF,
0XC0,0X79,0XCC,0XE7,0XC0,0X7F,0XFF,0XFF,0XFF,0XE0,0X3F,0XCC,0XF3,0X80,0XFF,0XFF,
0XFF,0XFF,0XE0,0X0F,0X9C,0XF0,0X00,0XFF,0XFF,0XFF,0XFF,0XF0,0X07,0X9F,0XF8,0X01,
0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X9F,0XE0,0X03,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X1F,
0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,
0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF0,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X07,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const uint8_t STATUS_6_WIDTH = 72;
const uint8_t STATUS_6_HEIGHT = 72;
const unsigned char STATUS_6[648] = { /* 0X00,0X01,0X48,0X00,0X48,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,
0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X00,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFC,0X00,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X7F,0XFF,
0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,
0X3F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,
0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,
0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,
0XFF,0XFF,0XE0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X0F,
0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,
0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,
0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,
0XFF,0XF8,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X1F,0XFF,
0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X00,
0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,
0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE0,0X00,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X01,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X01,0XF0,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X0F,0X80,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X07,0XFF,0XFF,
0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X01,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,
0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,
0XF8,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X1F,0XFF,0XFF,
0XFF,0XFF,0XF8,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X0F,
0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,
0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,
0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,
0XFF,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X0F,0XFF,
0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,
0X0F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,
0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,
0XFE,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X00,0X3F,0XFF,0XFF,
0XFF,0XFF,0XFF,0X00,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X00,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,
0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

// device not exist
const uint8_t STATUS_7_WIDTH = 72;
const uint8_t STATUS_7_HEIGHT = 72;
const unsigned char STATUS_7[648] = { /* 0X00,0X01,0X48,0X00,0X48,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,
0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF8,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X3F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XE0,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X0F,0XFF,
0XFF,0XFF,0XFF,0XFF,0X80,0X1F,0XE0,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XF8,
0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0X01,
0XFF,0XFE,0X03,0XFF,0XFF,0XFF,0XFF,0XFE,0X03,0XFF,0XFF,0X01,0XFF,0XFF,0XFF,0XFF,
0XFE,0X07,0XFF,0XFF,0X81,0XFF,0XFF,0XFF,0XFF,0XFC,0X07,0XFF,0XFF,0X81,0XFF,0XFF,
0XFF,0XFF,0XFC,0X07,0XFF,0XFF,0XC1,0XFF,0XFF,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XC0,
0XFF,0XFF,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,0XFF,0XFC,0X0F,0XFF,
0XFF,0XC0,0XFF,0XFF,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,0XFF,0XFC,
0X0F,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,0XFF,0XFC,0X0F,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,
0XFF,0XFC,0X07,0XFF,0XFF,0X81,0XFF,0XFF,0XFF,0XFF,0XFE,0X07,0XFF,0XFF,0X81,0XFF,
0XFF,0XFF,0XFF,0XFE,0X03,0XFF,0XFF,0X01,0XFF,0XFF,0XFF,0XFF,0XFE,0X03,0XFF,0XFF,
0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0X01,0XFF,0XFE,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,
0XFF,0XFC,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X3F,0XF0,0X07,0XFF,0XFF,0XFF,0XFF,
0XFF,0XC0,0X03,0X80,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X1F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X00,0X7F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,
0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XF8,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X03,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XF0,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X01,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X01,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF0,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF8,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X1F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};


#ifdef epd1in54_V2_H
void drawStatus(const char* disp, const char* reason){
  int stat = atoi(disp);
  if(DEBUG_OUTPUT){
    Serial.printf("Status: %d\n", stat);
  }
  switch(stat){
    case 1: // reuse STANDBY_4Q in display.h
      epd.SetFrameMemoryPartial(STANDBY_4Q, STATUS_CENTER_X-STANDBY_4Q_WIDTH/2, STATUS_CENTER_Y-STANDBY_4Q_HEIGHT/2, STANDBY_4Q_WIDTH, STANDBY_4Q_HEIGHT);
      break;
    case 2:
      epd.SetFrameMemoryPartial(STATUS_2, STATUS_CENTER_X-STATUS_2_WIDTH/2, STATUS_CENTER_Y-STATUS_2_HEIGHT/2, STATUS_2_WIDTH, STATUS_2_HEIGHT);
      break;
    case 3:
      epd.SetFrameMemoryPartial(STATUS_3, STATUS_CENTER_X-STATUS_3_WIDTH/2, STATUS_CENTER_Y-STATUS_3_HEIGHT/2, STATUS_3_WIDTH, STATUS_3_HEIGHT);
      break;
    case 4:
      epd.SetFrameMemoryPartial(STATUS_4, STATUS_CENTER_X-STATUS_4_WIDTH/2, STATUS_CENTER_Y-STATUS_4_HEIGHT/2, STATUS_4_WIDTH, STATUS_4_HEIGHT);
      break;
    case 5:
      epd.SetFrameMemoryPartial(STATUS_5, STATUS_CENTER_X-STATUS_5_WIDTH/2, STATUS_CENTER_Y-STATUS_5_HEIGHT/2, STATUS_5_WIDTH, STATUS_5_HEIGHT);
      break;
    case 6:
      epd.SetFrameMemoryPartial(STATUS_6, STATUS_CENTER_X-STATUS_6_WIDTH/2, STATUS_CENTER_Y-STATUS_6_HEIGHT/2, STATUS_6_WIDTH, STATUS_6_HEIGHT);
      break;
    case 7:
      epd.SetFrameMemoryPartial(STATUS_7, STATUS_CENTER_X-STATUS_7_WIDTH/2, STATUS_CENTER_Y-STATUS_7_HEIGHT/2, STATUS_7_WIDTH, STATUS_7_HEIGHT);
      break;
}

  paint.SetWidth(200);
  paint.SetHeight(32);
  paint.Clear(UNCOLORED);

  int textOffset = 100-int(strlen(reason)*5.5);
  paint.DrawStringAt(textOffset,0, reason, &Font16, COLORED);
  epd.SetFrameMemoryPartial(image, 0, 150, 200, 32);

  epd.DisplayPartFrame();

}
#endif // epd1in54_V2_H


#endif
